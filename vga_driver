library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VComponents.all;
use IEEE.STD_LOGIC_unsigned.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.NUMERIC_STD.ALL;


entity vga_driver is
PORT(
    clk : IN   STD_LOGIC;    
    h_sync    : OUT  STD_LOGIC;  
    v_sync    : OUT  STD_LOGIC;  
    display_en  : OUT  STD_LOGIC;  
    x : out  INTEGER;    
    y : out  INTEGER);
end vga_driver;

architecture Behavioral of vga_driver is

constant horizontal_display : integer := 640;   
constant horizontal_fp     : integer := 16;
constant horizontal_pulse  : integer := 96;    
constant horizontal_bp     : integer := 48;
constant horizontal_pt : integer := 800;

constant vertical_display : integer := 480;   
constant vertical_fp     : integer := 10;  
constant vertical_pulse  : integer := 2;      
constant vertical_bp     : integer := 29; 
constant vertical_pt : integer :=  521;   

begin
	process(clk)
	variable h : integer range 0 to 799 := 0; 
	variable v : integer range 0 to 520 := 0;  

	begin

    if(clk'event and clk = '1') then
      if(h = horizontal_pt - 1) then   
        h := 0;
        if(v < vertical_pt - 1) THEN  
          v := v + 1;
        else
          v:= 0;
        end if;
		 else 
			h:= h + 1;
      end if;
		
		if(h >= horizontal_display and v >= vertical_display) then 
        display_en <= '0';                                  
      else                                               
        display_en <= '1';                                   
      end if;
		
      if(h < horizontal_display) then  
        x <= h;          
      end if;
      if(v < horizontal_display) then  
        y <= v;              
      end if;
		
		if (h < horizontal_display + horizontal_fp or h >= horizontal_display + horizontal_fp + horizontal_pulse ) then 
			h_sync <= '1';    
      else
			h_sync <= '0';        
      end if;
		
      if(v < vertical_display + vertical_fp or v >= vertical_display + vertical_fp + vertical_pulse ) then
			v_sync <= '1';    
      else
         v_sync <= '0';        
      end if;
		
      

    end if;
  end process;


end Behavioral;

